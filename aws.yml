---

- name: " Creating an ec2-instance"
  hosts: localhost
  vars:
    keypair_name: "ansible"      
    access_key: "XXXXXXXXXX"
    secret_key: "YYYYYYYYYYYYYYYYYYYYYYYYYYYYY"
    region: "ap-south-1"
    sg1: "ansible-remote"
    sg2: "ansible-webserver"

  tasks:

    - name: "Creating key pair"
      ec2_key:
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ secret_key }}"
        region: "{{ region }}"
        name: "{{ keypair_name }}"
        state: present
      register: keypair_content



    - name: "Aws-Saving key pair"
      when: keypair_content.changed == true
      copy:
        content: "{{ keypair_content.key.private_key }}"
        dest: "{{ keypair_name }}.pem"
        mode: 0400


    - name: "Creating Security Group {{ sg1 }}"
      ec2_group:
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ secret_key }}"
        region: "{{ region }}"
        name: "{{ sg1 }}"
        description: "Allows only 22 connection"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip:
              - 0.0.0.0/0
            cidr_ipv6:
              - ::/0

        tags:
          name: "{{ sg1 }}"
      register: sg1_status




    - name: "Creation of Security Group {{ sg2 }}"
      ec2_group:
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ secret_key }}"
        region: "{{ region }}"
        name: "{{ sg2 }}"
        description: "Allows 80 443 connection"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip:
              - 0.0.0.0/0
            cidr_ipv6:
              - ::/0
             
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip:
              - 0.0.0.0/0
            cidr_ipv6:
              - ::/0

        tags:
          name: "{{ sg2 }}"
      register: sg2_status


    - name: "Creation of ec2-Instance"
      ec2:
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ secret_key }}"
        region: "{{ region }}"
        key_name: "{{ keypair_name }}"
        instance_type: "t2.micro"
        image: "ami-052cef05d01020f1d"
        user_data: "{{ lookup('file', 'user-data.sh') }}"
        wait: true
        group_id:
          - "{{ sg1_status.group_id }}"
          - "{{ sg2_status.group_id }}"
        instance_tags:
          Name: "webserver"
        wait_timeout: 300
        count_tag:
          Name: "webserver"
        exact_count: 1
      register: ec2_status



    - name: "Creating Dynamic Inventory"
      add_host:
        name: "{{ item.public_ip }}"
        groups: "webserver"
        ansible_host: "{{ item.public_ip }}"
        ansible_port: 22
        ansible_user: "ec2-user"
        ansible_ssh_private_key_file: "{{ keypair_name }}.pem"
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
      with_items:
        - "{{ ec2_status.tagged_instances }}"


- name: "Installing Apache Webserver"
  become: true
  hosts: webserver
  gather_facts: no
  tasks:
   

    - name: Wait for system to become reachable over WinRM
      wait_for_connection:
        timeout: 500

    - name: Gather facts for first time
      setup:

    - name: "Installing Httpd"
      yum:
        name:
          - httpd
          - php

        state: present 
            
    - name: "Restarting/Enabling httpd"
      service:
        name: httpd
        state: restarted
        enabled: true
